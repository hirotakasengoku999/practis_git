GitとGitHub

GitとGithubはシステム開発に必須
※キーボードの位置くらい重要

Gitで出来ること
①ファイルのバージョン管理
例）発表資料_20210522.pptx
    発表資料_20210517.pptx
	これだとファイルが多くなってくるとわかりづらくなる

Gitはファイルの数を増やすことなく、更新履歴を確認できる。
前の状態もわかる

②以前の状態に戻せる
いつどんな変更をしたかが残っているから前の状態にコマンド一発で戻せる

③チームでスムーズに開発
複数人の共同編集は自己りやすい
思わぬ上書きを防止できる

GitHubで出来ること
①コードの共有
②コードレビュー
プルリクエスト
	コードを修正しましたのでレビューをください＞レビューをしてマージする
③OSSに参加

Gitの基本コマンドまとめ
流れ
ローカル
↓
リポジトリ
↓
GitHub
↓
ローカルリポジトリ

ローカルの基本操作
①初期化
	init(ローカルリポジトリを作成)
②記録
	add(ワークツリー) git add .
	↓
	ステージ（コミットしたいファイルの事前置き場） git commit -m "コミットメッセージ"
	↓
	commit(リポジトリ：変更履歴を記録)
③状況確認
statusやdiffで状況を確認
git diff
git diff --staged
git status

④履歴の確認
変更３
変更２
変更１
logで確認できる
git log

⑤元に戻す
restore
git restore ファイル名
git restore -staged＜ファイル名＞

GitHubでチーム開発する方法
ローカルで開発
↓
ブランチ
	ブランチの上で開発
	GitHubにプッシュ
GitHub
	プルリクエスト
	問題なかったらGitHub上に更新してください

ブランチ：分岐して開発

main
↓
コミット２
↓
コミット１

git branch feature

git branch -a